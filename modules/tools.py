import aiogram.types
from mathweek.buttons import RegButtonClient, TechSupportButtonClient
from mathweek.loader import bot, state_manager
from modules.content_manager import ContentManager
from modules.server.entity_controllers.student_controller import *
from mathweek.logger import log
from modules.server.requests_instance import student_con


def check_user_registered(call):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

    async def wrapper(message: aiogram.types.Message):
        await state_manager.detect_command_call()
        controller = student_con
        result: aiohttp.ClientResponse = await controller.get_student(telegram_id=message.from_user.id)
        if result.status == 404:
            log.w(check_user_registered.__name__,
                  f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID {message.from_user.id} –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (404)")
            with open('system_images/auth_required.png', 'rb') as image:
                await bot.send_photo(chat_id=message.chat.id,
                                     caption='‚ùå –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —É—á–µ–Ω–∏–∫ —à–∫–æ–ª—ã ‚Ññ 2122.\n\n‚ö†Ô∏è –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –æ—Ç—Å—Ç—Ä–∞–Ω–∏—Ç—å —É—á–µ–Ω–∏–∫–∞ –æ—Ç —É—á–∞—Å—Ç–∏—è –≤ —Å–æ–±—ã—Ç–∏–∏, –µ—Å–ª–∏ –±—É–¥—É—Ç —É–∫–∞–∑–∞–Ω—ã —Ñ–∞–ª—å—à–∏–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!',
                                     photo=image,
                                     reply_markup=RegButtonClient
                                     )
        elif result.status == 200:
            log.s(check_user_registered.__name__,
                  f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram ID {message.from_user.id} –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (200)')
            await call(message)
        else:
            log.e(check_user_registered.__name__,
                  f"–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID {message.from_user.id} —Å–µ—Ä–≤–µ—Ä –≤—ã–¥–∞–ª –æ—à–∏–±–∫—É {result.status}")
            await bot.send_photo(chat_id=message.chat.id,
                                 caption=f'‚ùå –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ–± —É—á–µ–Ω–∏–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: HTTP {result.status}.',
                                 photo=ContentManager.make_server_error_image(result.status),
                                 reply_markup=TechSupportButtonClient
                                 )

    return wrapper


async def register_new_student(message: aiogram.types.Message, student: Student) -> aiohttp.ClientResponse:
    """–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞"""
    result: aiohttp.ClientResponse = await student_con.create_student(student)
    if result.status == 201:
        log.s(register_new_student.__name__,
              f"–£—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —É—á–µ–Ω–∏–∫ —Å Telegram ID {student.telegram_id}")
        await bot.send_message(chat_id=message.chat.id,
                               text=f'üóùÔ∏è –¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω(-–∞) –∫–∞–∫ <b>{student.name} {student.lastname} {student.class_number}{student.class_letter}</b>',
                               parse_mode='HTML')
    if result.status == 400:
        log.e(register_new_student.__name__,
              f'–£—á–µ–Ω–∏–∫ {student.name} {student.lastname} {student.class_number}{student.class_letter} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
        with open('system_images/user_exists.png', 'rb') as image:
            await bot.send_photo(chat_id=message.chat.id,
                                 caption=f'‚ùå –£—á–µ–Ω–∏–∫ <b>{student.name} {student.lastname} {student.class_number}{student.class_letter} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞.</b>',
                                 photo=image,
                                 parse_mode='HTML',
                                 reply_markup=TechSupportButtonClient
                                 )
    else:
        log.e(register_new_student.__name__,
              f"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Telegram ID {student.telegram_id}. HTTP —Å—Ç–∞—Ç—É—Å: {result.status}")
        await bot.send_photo(chat_id=message.chat.id,
                             caption=f'‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞. HTTP {result.status}',
                             photo=ContentManager.make_server_error_image(result.status),
                             reply_markup=TechSupportButtonClient
                             )

    return result
